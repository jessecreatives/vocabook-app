{"version":3,"sources":["data.js","components/TopHeader.js","components/Button.js","components/AddButton.js","components/Languages.js","components/Header.js","components/Sidebar.js","components/Detail.js","components/Modal.js","components/Vocabulary.js","components/Loading.js","App.js","index.js"],"names":["data","languages","id","name","definition","example","formWordLabel","formDefinitionLabel","formExampleLabel","formDefinitionHelp","formExampleHelp","words","title","pronounce","definitions","value","examples","meta","jp","newVocabFormLegend","submit","en","TopHeader","className","Button","label","onClick","type","AddButton","Languages","map","lang","to","console","log","Header","Sidebar","onClickAddVocab","word","Detail","activeWord","children","handleOnDelete","useState","isEditing","setIsEditing","onBlur","i","Modal","onSubmitNewVocab","onCloseModal","definition1","definition2","definition3","example1","example2","example3","vocab","setVocab","onSubmit","newVocab","htmlFor","onChange","e","target","Vocabulary","useParams","find","setActiveWord","JSON","parse","localStorage","getItem","setWords","useEffect","setItem","stringify","isDetailOpen","setIsDetailOpen","isModalOpen","setIsModalOpen","handleOnChange","handleOnDefChange","d","handleOnExampleChange","length","toString","preventDefault","filter","w","Loading","src","alt","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce409ae4.chunk.js","sourcesContent":["export const data = {\n    languages: [\n        {\n            id: 'jp',\n            name: '日本語',\n            definition: '定義',\n            example: '例文',\n            formWordLabel: \"新単語\",\n            formDefinitionLabel: \"定義\",\n            formExampleLabel: \"例文\",\n            formDefinitionHelp: '後でも追加可能です。',\n            formExampleHelp: '後でも追加可能です。',\n            words: [\n                {\n                    id: 0,\n                    title: '幸せ',\n                    pronounce: 'しあわせ',\n                    definitions: [\n                        {\n                            id: 'definition1',\n                            value: 'とても気持ちいい',\n                        },\n                        {\n                            id: 'definition2',\n                            value: '嬉しいこと'\n                        }\n                    ],\n                    examples: [\n                        {\n                            id: 'example1',\n                            value: '私は幸せに感じています。'\n                        },\n                        {\n                            id: 'example2',\n                            value: '美味しいものを食べて幸せ！'\n                        }\n                    ]\n                },\n                {\n                    id: 1,\n                    title: '成功する',\n                    pronounce: 'せいこうする',\n                    definitions: [\n                        {\n                            id: 'definition1',\n                            value: '望んでいる結果を得ること'\n                        }\n                    ],\n                    examples: [\n                        {\n                            id: 'example1',\n                            value: '私は必ず成功するんだ！',\n                        },\n                        {\n                            id: 'example2',\n                            value: '成功した人々の共通点'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: 'en',\n            name: 'English',\n            definition: 'Definitions',\n            example: 'Examples',\n            formWordLabel: \"New Word\",\n            formDefinitionLabel: \"Definitions\",\n            formExampleLabel: \"Examples\",\n            formDefinitionHelp: 'You can add more definitions later.',\n            formExampleHelp: 'You can add more examples later.',\n            words: [\n                {\n                    id: 0,\n                    title: 'pretext',\n                    pronounce: 'pri-tekst',\n                    definitions: [\n                        {\n                            id: 'definition1',\n                            value: 'a reason given in justification of a course of action that is not the real reason.'\n                        }\n                    ],\n                    examples: [\n                        {\n                            id: 'example1',\n                            value: 'the rebels had the perfect pretext for making their move',\n                        },\n                        {\n                            id: 'example2',\n                            value: 'That was just a pretext'\n                        }\n                    ]\n                },\n                {\n                    id: 1,\n                    title: 'hard',\n                    pronounce: 'ha-d',\n                    definitions: [\n                        {\n                            id: 'definition1',\n                            value: 'solid, firm, and rigid; not easily broken, bent, or pierced.',\n                        },    \n                        {\n                            id: 'definition2',\n                            value: 'done with a great deal of force or strength.'\n                        },\n                        {\n                            id: 'definition3',\n                            value: 'with a great deal of effort.'\n                        },\n                        {\n                            id: 'definition4',\n                            value: 'so as to be solid or firm.'\n                        }],\n                    examples: [\n                        {\n                            id: 'example1',\n                            value: 'the rebels had the perfect pretext for making their move',\n                        },\n                        {\n                            id: 'example2',\n                            value: 'That was just a pretext'\n                        },\n                        {\n                            id: 'example3',\n                            value: 'the rebels had the perfect pretext for making their move',\n                        },\n                        {\n                            id: 'example4',\n                            value: 'That was just a pretext'\n                        }\n                    ]\n                }\n            ]\n        },\n    ]\n};\n\nexport const meta = {\n    jp: {\n        newVocabFormLegend: \"新単語追加\",\n        title: \"単語\",\n        pronounce: \"発音\",\n        definition: \"定義\",\n        example: \"例文\",\n        submit: \"追加\"\n    },\n    en: {\n        newVocabFormLegend: \"New Vocabulary\",\n        title: \"vocabulary\",\n        pronounce: \"pronounce\",\n        definition: \"definition\",\n        example: \"example\",\n        submit: \"Add\"\n    }\n}","import React from 'react';\n\n\nimport '../App.css';\n\nexport default function TopHeader() {\n    return (\n        <nav className=\"text-center\">\n        <div className=\"container position-relative py-3\">\n          <h1 className=\"fs1 navbar-brand text-center secondary en\">VocaBook</h1>\n          <button className=\"material-icons secondary settings\">settings</button>\n        </div>\n        </nav>\n    )\n}\n","import React from 'react';\n\nconst Button = ({label, name, onClick}) => {\n    return (\n        <button type=\"button\" className=\"d-flex flex-row align-items-center justify-content-between fs4 btn btn-lg btn-light accent\" name={ name } onClick={onClick}>{label}<span className=\"material-icons\">keyboard_arrow_right</span></button>\n    );\n}\n\nexport default Button;\n","import React from 'react';\n\nconst AddButton = ({onClick}) => {\n    return (\n        <button type=\"button\" className=\"add-btn d-flex flex-row align-items-center justify-content-center btn btn-lg btn-light p-1\" onClick={onClick}><span className=\"material-icons add\">add_circle</span></button>\n    );\n}\n\nexport default AddButton;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {data} from '../data';\nimport TopHeader from './TopHeader';\nimport Button from './Button';\nimport AddButton from './AddButton';\n\nexport default function Languages() {\n\n    return (\n        <>\n            <TopHeader />\n            <div className=\"container\">\n                <div className=\"bg-white\">\n                    <ul className=\"container\">\n                        {data.languages.map(lang => {\n                            const id = lang.id;\n                            return (\n                                <li key={id} className=\"mb-5\">\n                                    <Link className=\"fs3\" to={ `/lang/${id}` }>\n                                        <Button\n                                            label={ lang.name }\n                                            name=\"\"\n                                            onClick={() => console.log('Hi')}\n                                        />\n                                    </Link>\n                                </li>\n                            );\n                        }) }\n                        <li>\n                            <AddButton  />\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport '../App.css';\n\nexport default function Header({lang}) {\n    return (\n        <nav className=\"text-center\">\n          <div className=\"container position-relative py-3\">\n                <Link className=\"nav-link\" to=\"/\">\n                        <button className=\"material-icons fs2 secondary back\">\n                            keyboard_backspace\n                        </button>\n                </Link>\n                <h1 className=\"fs1 navbar-brand text-center secondary en\">{lang.name}</h1>\n                <button className=\"material-icons settings secondary\">\n                    settings\n                </button>\n          </div>\n        </nav>\n    )\n}\n","import React from 'react';\nimport Button from './Button';\nimport AddButton from './AddButton';\n\nexport default function Sidebar({words, onClick, onClickAddVocab}) {\n    return (\n        <div className=\"col-12 col-md-8 offset-md-2 offset-lg-0 col-lg-4\">\n            <div className=\"bg-white\">\n                <ul>\n                    { words.map(word => (\n                        <li key={ word.title } className=\"mb-5\">\n                            <Button\n                                label={ word.title }\n                                name={ word.id }\n                                onClick={ onClick }\n                            />\n                        </li>\n                    )) }\n                    <li>\n                        <AddButton onClick={onClickAddVocab} />\n                    </li>\n                </ul>\n            </div>\n        </div>\n    ) \n}\n","import React, { useState } from 'react';\n\nexport default function Detail({meta, lang, activeWord, children, handleOnDelete, ...props}) {\n    const [isEditing, setIsEditing] = useState(false);\n    return (\n        <div className=\"detail col-12 col-md-8 offset-md-2 offset-lg-0 col-lg-8\">\n            <div className=\"bg-white position-relative\">\n                {isEditing ? (\n                    <h2 onBlur={() => setIsEditing(false)}>{children}</h2>\n                ) : (\n                    <>\n                        <div className=\"d-flex flex-row align-items-end mb-5\">\n                            <h2 className=\"mb-0 fs1 mr-5\" onClick={() => setIsEditing(true)}>{activeWord.title}</h2>\n                            <p className=\"mb-0\" onClick={ () => setIsEditing(true) }>{ activeWord.pronounce }</p>\n                        </div>\n                        <div className=\"mb-5\">\n                            <p className=\"font-bold\">{meta[lang.id].definition}</p>\n                        {activeWord.definitions.map((definition, i) => (\n                            <p onClick={ () => setIsEditing(true) } key={ definition.id }>{i+1}. {definition.value}</p>\n                            \n                        )) }\n                        </div>\n                        <div className=\"mb-5\">\n                            <p className=\"font-bold\">{meta[lang.id].example}</p>\n                            {activeWord.examples.map((example, i) => (\n                                <p onClick={ () => setIsEditing(true) } key={ example.id }>{i+1}. {example.value}</p>\n                            ))}\n                        </div>\n                    </>\n                    ) }\n                <button type=\"button\" className=\"material-icons highlight position-absolute\" onClick={() => handleOnDelete(activeWord)}>delete</button>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\n\nexport default function Modal({ meta, lang , onSubmitNewVocab, onCloseModal}) {\n    const [vocab, setVocab] = useState({\n        title: '',\n        pronounce: '',\n        definition1: '',\n        definition2: '',\n        definition3: '',\n        example1: '',\n        example2: '',\n        example3: ''\n    });\n\n    const SubmitNewVocab = () => {\n        const definitions = [\n            {\n                id: 'definition1',\n                value: vocab.definition1\n            },\n            {\n                id: 'definition2',\n                value: vocab.definition2\n            },\n            {\n                id: 'definition3',\n                value: vocab.definition3\n            }\n        ];\n        const examples = [\n            {\n                id: 'example1',\n                value: vocab.example1\n            },\n            {\n                id: 'example2',\n                value: vocab.example2\n            },\n            {\n                id: 'example3',\n                value: vocab.example3\n            }\n        ];\n        const newVocab = {\n            title: vocab.title,\n            pronounce: vocab.pronounce,\n            definitions,\n            examples\n        }\n        onSubmitNewVocab(newVocab);\n    }\n\n    return (\n        <div className=\"custom-modal\">\n            <div className=\"modal-inner bg-white\">\n                <button className=\"material-icons close\" onClick={onCloseModal}>close</button>\n                <form onSubmit={SubmitNewVocab}>\n                    <fieldset>\n                        <legend className=\"text-center fs2 font-bold mb-5\">{ meta[lang.id].newVocabFormLegend }</legend>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">{ meta[lang.id].title }</label>\n                            <input  \n                                type=\"text\"\n                                id=\"title\" className=\"form-control\"\n                                value={vocab.title}\n                                onChange={(e) => setVocab({...vocab, title: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"pronounce\">{ meta[lang.id].pronounce }</label>\n                            <input\n                                type=\"text\"\n                                id=\"pronounce\" className=\"form-control\" \n                                value={vocab.pronounce}\n                                onChange={(e) => setVocab({...vocab, pronounce: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"definition1\">{ meta[lang.id].definition }1</label>\n                            <input\n                                type=\"text\"\n                                id=\"definition1\" className=\"form-control\"\n                                value={vocab.definition1}\n                                onChange={(e) => setVocab({...vocab, definition1: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"definition2\">{ meta[lang.id].definition }2</label>\n                            <input\n                                type=\"text\"\n                                id=\"definition2\" className=\"form-control\"\n                                value={vocab.definition2}\n                                onChange={(e) => setVocab({...vocab, definition2: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"definition3\">{ meta[lang.id].definition }3</label>\n                            <input\n                                type=\"text\"\n                                id=\"definition3\"  className=\"form-control\"\n                                value={vocab.definition3}\n                                onChange={(e) => setVocab({...vocab, definition3: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"example1\">{ meta[lang.id].example }1</label>\n                            <input\n                                type=\"text\"\n                                id=\"example1\" className=\"form-control\"\n                                value={vocab.example1}\n                                onChange={(e) => setVocab({...vocab, example1: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"example2\">{ meta.[lang.id].example }2</label>\n                            <input\n                                type=\"text\"\n                                id=\"example2\" className=\"form-control\"\n                                value={vocab.example2}\n                                onChange={(e) => setVocab({...vocab, example2: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"example3\">{ meta[lang.id].example }3</label>\n                            <input\n                                type=\"text\"\n                                id=\"example3\" className=\"form-control\"\n                                value={vocab.example3}\n                                onChange={(e) => setVocab({...vocab, example3: e.target.value})}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn fs4\">{meta[lang.id].submit}</button>\n                    </fieldset>\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport Header from './Header'\nimport Sidebar from './Sidebar';\nimport Detail from './Detail';\nimport Modal from './Modal';\nimport { data } from '../data';\nimport { meta } from '../data';\n\nexport default function Vocabulary() {\n    const { id } = useParams();\n\n    const lang = data.languages.find(lang => lang.id === id)\n\n    const [activeWord, setActiveWord] = useState({\n        id: null,\n        title: '',\n        pronounce: '',\n        definitions: [],\n        examples: []\n    });\n\n    const [words, setWords] = useState(\n        JSON.parse(localStorage.getItem(lang.id)) || lang.words\n    );\n\n    useEffect(() => {\n        localStorage.setItem([lang.id], JSON.stringify(words));\n    }, [lang, words]);\n    \n    useEffect(() => {\n        setWords(words.map(word => word.id === activeWord.id ? { ...word, ...activeWord } : word))\n    }, [activeWord]);\n\n    const [isDetailOpen, setIsDetailOpen] = useState(false);\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const handleOnClick = (e) => {\n        const word = words.find(word => word.id.toString() === e.target.name);\n        const { id, title, pronounce, definitions, examples } = word;\n        setActiveWord({ id, title, pronounce, definitions, examples });\n        setIsDetailOpen(true);\n        e.preventDefault();\n    }\n\n    const handleOnClickAddVocab = (e) => {\n        e.preventDefault();\n        // display modal\n        setIsModalOpen(true);\n    }\n\n    const handleOnChange = (e) => {\n        setActiveWord({ ...activeWord, [e.target.name]: e.target.value });\n    }\n\n    const handleOnSubmitNewVocab = (vocab) => {\n        const newVocab = { ...vocab, id: words.length };\n        setWords([...words, newVocab]);\n        setIsModalOpen(false);\n    }\n\n    const handleOnCloseModal = () => {\n        setIsModalOpen(false);\n    }\n\n    const handleOnDefChange = (e) => {\n        setActiveWord({ ...activeWord, definitions: [...activeWord.definitions.map(d => d.id === e.target.name ? {...d, value: e.target.value} : d)] });\n    }\n\n    const handleOnExampleChange = (e) => {\n        setActiveWord({ ...activeWord, examples: [...activeWord.examples.map(example => example.id === e.target.name ? {...example, value: e.target.value} : example)] });\n    }\n\n    const handleOnDelete = (word) => {\n        setIsDetailOpen(false);\n        setWords(words.filter(w => w.id !== word.id));\n    }\n\n    return (\n        <>\n            {/* modal */}\n            {isModalOpen && <Modal meta={meta} lang={lang} onSubmitNewVocab={handleOnSubmitNewVocab} onCloseModal={handleOnCloseModal} />}\n            <Header lang={lang} /> \n            <div className=\"row container position-relative\">\n                {/* sidebar */ }\n                <Sidebar words={words} onClick={handleOnClick} onClickAddVocab={handleOnClickAddVocab} />\n                {/* detail */ }\n                { isDetailOpen && (\n                    <Detail meta={meta} lang={lang} activeWord={ activeWord } handleOnDelete={handleOnDelete}>\n                    <form>\n                            <div className=\"form-group align-items-start\">\n                                <label htmlFor=\"title\">{ meta[lang.id].title }</label>\n                                <input type=\"text\" name=\"title\" value={ activeWord.title } onChange={ handleOnChange } />\n                            </div>\n                        <div className=\"form-group align-items-start\">\n                            <label htmlFor=\"pronounce\">{ meta[lang.id].pronounce }</label>\n                            <input type=\"text\" name=\"pronounce\" value={ activeWord.pronounce } onChange={ handleOnChange } />\n                        </div>\n                        <div className=\"form-group align-items-start\">\n                            <label htmlFor=\"definitions\">{ meta[lang.id].definition }</label>\n                            <div className=\"d-flex flex-column\">\n                                { activeWord.definitions.map(definition => (\n                                    <input key={definition.id} type=\"text\" name={definition.id} value={ definition.value } onChange={ handleOnDefChange } />\n                                )) }\n                            </div>\n                        </div>\n                        <div className=\"form-group align-items-start\">\n                            <label htmlFor=\"examples\">{ meta[lang.id].example }</label>\n                            <div className=\"d-flex flex-column\">\n                                { activeWord.examples.map(example => (\n                                    <input key={example.id} type=\"text\" name={example.id} value={ example.value } onChange={ handleOnExampleChange } />\n                                ))}\n                            </div>\n                        </div>\n                    </form>\n                </Detail>\n                )}\n            </div>\n        </>\n    )\n}\n","import React, {useState} from 'react';\n\nexport default function Loading() {\n\n    return (\n        <div className=\"loading b-secondary position-fixed d-flex flex-column justify-content-center\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-12 col-lg-6 img-container\"><img src=\"./assets/hero.png\" alt=\"\" /></div>\n                <div className=\"white col-12 col-md-12 col-lg-6 text-container\">\n                    <div className=\"text-inner\">\n                        <h1><span className=\"position-relative\">VocaBook</span></h1>\n                        <p>As the most streamlined while efficient vocabulary builder you can find, it is designed for the serious language learners.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Languages from './components/Languages';\nimport Vocabulary from './components/Vocabulary';\nimport Loading from './components/Loading';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <Loading />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Languages />\n          </Route>\n          <Route path=\"/lang/:id\">\n            <Vocabulary />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}